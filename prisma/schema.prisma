// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  // url      = env("DATABASE_URL")
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          String   @id @default(uuid())
  name        String
  email       String   @unique
  username    String   @unique
  phoneNumber String?  @map("phone_number")
  profile     Profile?
  orders      Order[]

  @@map("users")
}

model SonnyAngelProduct {
  id       String    @id @default(uuid())
  series   String
  year     Int?
  name     String
  listings Listing[]

  @@map("sonny_angel_products")
}

model Profile {
  id                 String    @id @default(uuid())
  userId             String    @unique @map("user_id")
  user               User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  starRating         Float?    @map("star_rating")
  amountProductsSold Int       @default(0) @map("amount_of_products_sold")
  listings           Listing[] @relation("ProfileListings")
  cart               Listing[] @relation("ProfileCart")
  favorites          Listing[] @relation("ProfileFavorites")

  @@map("profiles")
}

model Listing {
  id          String            @id @default(uuid())
  productId   String            @map("product_id")
  product     SonnyAngelProduct @relation(fields: [productId], references: [id])
  listerId    String            @map("lister_id")
  lister      Profile           @relation("ProfileListings", fields: [listerId], references: [id])
  colors      String[] // Array of colors from US-caption colors
  description String
  price       Decimal?          @db.Decimal(10, 2) // Optional price field
  status      String // e.g., "active", "sold", "pending"
  inCarts     Profile[]         @relation("ProfileCart")
  inFavorites Profile[]         @relation("ProfileFavorites")
  orders      Order[]           @relation("OrderListings")
  imageUrls   String[]

  @@map("listings")
}

model Order {
  id       String    @id @default(uuid())
  listings Listing[] @relation("OrderListings") // Many-to-many relation
  status   String // e.g., "pending", "on the way", etc.
  user     User?     @relation(fields: [userId], references: [id])
  userId   String?

  @@map("orders")
}
